["```py\n$ python\n>>> message = 'message'   \u2776\n>>> hash(message)\n2010551929503284934       \u2777\n```", "```py\n>>> hash('same message')\n1116605938627321843        \u2776\n>>> hash('same message')\n1116605938627321843        \u2776\n```", "```py\n>>> bin(hash('a'))\n'0b100100110110010110110010001110011110011111011101010000111100010'\n>>> bin(hash('b'))\n'0b101111011111110110110010100110000001010000011110100010111001110'\n>>> \n>>> bin(hash(0))\n'0b0'\n>>> bin(hash(1))\n'0b1'\n```", "```py\n>>> import hashlib\n>>> sorted(hashlib.algorithms_guaranteed)\n['blake2b', 'blake2s', 'md5', 'sha1', 'sha224', 'sha256', 'sha384', \n'sha3_224', 'sha3_256', 'sha3_384', 'sha3_512', 'sha512', 'shake_128',\n 'shake_256']\n```", "```py\nimport hashlib\n\nnamed = hashlib.sha256()           \u2776\ngeneric = hashlib.new('sha256')    \u2777\n```", "```py\n>>> from hashlib import sha256\n>>> \n>>> message = b'message'\n>>> hash_function = sha256(message)\n```", "```py\n>>> hash_function.digest()        \u2776\nb'\\xabS\\n\\x13\\xe4Y\\x14\\x98+y\\xf9\\xb7\\xe3\\xfb\\xa9\\x94\\xcf\\xd1\\xf3\\xfb\"\\xf7\\x\n1c\\xea\\x1a\\xfb\\xf0+F\\x0cm\\x1d'\n>>> \n>>> hash_function.hexdigest()     \u2777\n'ab530a13e45914982b79f9b7e3fba994cfd1f3fb22f71cea1afbf02b460c6d1d'\n```", "```py\n>>> from hashlib import md5\n>>> \n>>> x = bytearray.fromhex(\n...    \n'd131dd02c5e6eec4693d9a0698aff95c2fcab58712467eab4004583eb8fb7f8955ad340609\nf4b30283e488832571415a085125e8f7cdc99fd91dbdf280373c5bd8823e3156348f5bae6da\ncd436c919c6dd53e2b487da03fd02396306d248cda0e99f33420f577ee8ce54b67080a80d1e\nc69821bcb6a8839396f9652b6ff72a70')\n>>> \n>>> y = bytearray.fromhex(\n...     \n'd131dd02c5e6eec4693d9a0698aff95c2fcab50712467eab4004583eb8fb7f8955ad340609\nf4b30283e4888325f1415a085125e8f7cdc99fd91dbd7280373c5bd8823e3156348f5bae6da\ncd436c919c6dd53e23487da03fd02396306d248cda0e99f33420f577ee8ce54b67080280d1e\nc69821bcb6a8839396f965ab6ff72a70')\n>>> \n>>> x == y                               \u2776\nFalse                                    \u2776\n>>> \n>>> md5(x).digest() == md5(y).digest()   \u2777\nTrue                                     \u2777\n```", "```py\n>>> message = b'message'\n>>> \n>>> hash_function = hashlib.sha256()                             \u2776\n>>> hash_function.update(message)                                \u2777\n>>> \n>>> hash_function.digest() == hashlib.sha256(message).digest()   \u2778\nTrue                                                             \u2778\n```", "```py\n>>> from hashlib import sha256\n>>> \n>>> once = sha256()\n>>> once.update(b'message')            \u2776\n>>> \n>>> many = sha256()\n>>> many.update(b'm')                  \u2777\n>>> many.update(b'e') \u2777\n>>> many.update(b's') \u2777\n>>> many.update(b's') \u2777\n>>> many.update(b'a') \u2777\n>>> many.update(b'g')                  \u2777\n>>> many.update(b'e')                  \u2777\n>>> \n>>> once.digest() == many.digest()     \u2778\nTrue\n```", "```py\n>>> hash_function = hashlib.sha256(b'message')\n>>> hash_function.digest_size\n32\n>>> len(hash_function.digest()) * 8\n256\n```", "```py\n$ python -c 'import hashlib; print(hashlib.sha256(b\"m\").hexdigest())'\n62c66a7a5dd70c3146618063c344e531e6d4b59e379808443ce962b3abd63c5a\n\n$ ruby -e 'require \"digest\"; puts Digest::SHA256.hexdigest \"m\"'\n62c66a7a5dd70c3146618063c344e531e6d4b59e379808443ce962b3abd63c5a\n```", "```py\n$ python -c 'print(hash(\"message\"))'\n8865927434942197212\n$ python -c 'print(hash(\"message\"))'    \u2776\n3834503375419022338                     \u2777\n```", "```py\n>>> import zlib\n>>> \n>>> message = b'this is repetitious' * 42         \u2776\n>>> checksum = zlib.crc32(message)                \u2776\n>>> \n>>> compressed = zlib.compress(message)           \u2777\n>>> decompressed = zlib.decompress(compressed)    \u2777\n>>> \n>>> zlib.crc32(decompressed) == checksum          \u2778\nTrue                                              \u2778\n```", "```py\n>>> zlib.crc32(b'gnu')\n1774765869\n>>> zlib.crc32(b'codding')\n1774765869\n```"]