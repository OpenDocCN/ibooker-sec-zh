["```py\nimport ssl\n\naddress = ('wikipedia.org', 443)\ncertificate = ssl.get_server_certificate(address)      \u2776\nprint(certificate)\n```", "```py\n$ python get_server_certificate.py > wikipedia.crt\n```", "```py\n$ openssl x509 -in wikipedia.crt -text -noout | less\n```", "```py\n...\n        Subject: CN=*.wikipedia.org     \u2776\n        Subject Public Key Info:\n...\n```", "```py\n...\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C=US, O=Let's Encrypt, CN=Let's Encrypt Authority X3    \u2776\n        Validity\n...\n```", "```py\n...\nSubject Public Key Info:\n    Public Key Algorithm: id-ecPublicKey                         \u2776\n Public-Key: (256 bit)                                    \u2777\n pub: \n 04:6a:e9:9d:aa:68:8e:18:06:f4:b3:cf:21:89:f2: \u2778\n b3:82:7c:3d:f5:2e:22:e6:86:01:e2:f3:1a:1f:9a: \u2778\n ba:22:91:fd:94:42:82:04:53:33:cc:28:75:b4:33: \u2778\n 84:a9:83:ed:81:35:11:77:33:06:b0:ec:c8:cb:fa: \u2778\n                a3:51:9c:ad:dc \u2778\n...\n```", "```py\n...\nValidity\n    Not Before: Jan 29 22:01:08 2020 GMT\n    Not After : Apr 22 22:01:08 2020 GMT\n...\n```", "```py\n...\nSignature Algorithm: sha256WithRSAEncryption                  \u2776\n    4c:a4:5c:e7:9d:fa:a0:6a:ee:8f:47:3e:e2:d7:94:86:9e:46:    \u2777\n    95:21:8a:28:77:3c:19:c6:7a:25:81:ae:03:0c:54:6f:ea:52:    \u2777\n    61:7d:94:c8:03:15:48:62:07:bd:e5:99:72:b1:13:2c:02:5e:    \u2777\n...\n```", "```py\n$ pipenv install django\n```", "```py\n$ django-admin startproject alice\n```", "```py\n$ cd alice                      \u2776\n$ python manage.py runserver    \u2777\n...\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n```", "```py\n$ pipenv install gunicorn\n```", "```py\n$ gunicorn alice.wsgi       \u2776\n[2020-08-16 11:42:20 -0700] [87321] [INFO] Starting gunicorn 20.0.4\n...\n```", "```py\n$ openssl req -x509 \\                                  \u2776\n    -nodes -days 3650 \\                                \u2777\n    -newkey ec:<(openssl ecparam -name prime256v1) \\   \u2778\n    -keyout private_key.pem \\                          \u2779\n    -out certificate.pem                               \u277a\n```", "```py\nCountry Name (2 letter code) []:US\nState or Province Name (full name) []:AK\nLocality Name (eg, city) []:Anchorage\nOrganization Name (eg, company) []:Alice Inc.\nOrganizational Unit Name (eg, section) []:\nCommon Name (eg, fully qualified host name) []:localhost    \u2776\nEmail Address []:alice@alice.com\n```", "```py\n$ gunicorn alice.wsgi \\            \u2776\n    --keyfile private_key.pem \\    \u2777\n    --certfile certificate.pem     \u2778\n```", "```py\nStrict-Transport-Security: max-age=3600\n```", "```py\nStrict-Transport-Security: max-age=3600; includeSubDomains\n```", "```py\n$ pipenv install requests\n```", "```py\n>>> requests.get('https://www.python.org', verify=False)\nconnectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is\nbeing made to host 'www.python.org'. Adding certificate verification is\nstrongly advised.\n<Response [200]>\n```", "```py\n>>> url = 'https://www.python.org'\n>>> cert = ('/path/to/certificate.pem', '/path/to/private_key.pem')\n>>> requests.get(url, cert=cert)\n<Response [200]>\n```", "```py\n>>> session = requests.Session()\n>>> session.verify=False\n>>> cert = ('/path/to/certificate.pem', '/path/to/private_key.pem')\n>>> session.cert = cert\n>>> session.get('https://www.python.org')\n<Response [200]>\n```", "```py\nDATABASES = {\n   'default': {\n       'ENGINE': 'django.db.backends.sqlite3',\n       'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),    \u2776\n   }\n}\n```", "```py\nDATABASES = {\n   \"default\": {\n       \"ENGINE\": \"django.db.backends.postgresql\",\n       \"NAME\": \"db_name\",\n       \"HOST\": db_hostname,\n       \"PORT\": 5432,\n       \"USER\": \"db_user\",\n       \"PASSWORD\": db_password,\n       \"OPTIONS\": {                     \u2776\n           \"sslmode\": \"verify-full\",    \u2776\n       },                               \u2776\n   }\n}\n```", "```py\nfrom django.core.mail import send_mail\n\nsend_mail('subject',\n         'message',\n         'alice@python.org',                    \u2776\n         ['bob@python.org'],                    \u2777\n         auth_user='overridden_user_name',      \u2778\n         auth_password='overridden_password')   \u2779\n```"]