["```py\n<a href='https:/./authorize.alice.com/o/authorize/?\n\u27a5 response_type=code&                                    \u2776\n\u27a5 client_id=Q7kuJVjbGbZ6dGlwY49eFP7fNFEUFrhHGGG84aI3&    \u2776\n\u27a5 state=ju2rUmafnEIxvSqphp3IMsHvJNezWb'>                 \u2777\n    What is your email?\n</a>\n```", "```py\nhttps:/./client.charlie.com/oauth/callback/?    \u2776\n\u27a5 code=CRN7DwyquEn99mrWJg5iAVVlJZDTzM&        \u2777\n\u27a5 state=ju2rUmafnEIxvSqphp3IMsHvJNezWb        \u2778\n```", "```py\n{\n 'access_token': 'A2IkdaPkmAjetNgpCRNk0zR78DUqoo',   \u2776\n 'token_type': 'Bearer'                              \u2776\n 'scope': 'email',                                   \u2777\n 'expires_in': 36000,                                \u2777\n ...\n}\n```", "```py\nGET /protected/name/ HTTP/1.1\nHost: resource.alice.com\nAuthorization: Bearer A2IkdaPkmAjetNgpCRNk0zR78DUqoo\n```", "```py\n$ pipenv install django-oauth-toolkit\n```", "```py\nINSTALLED_APPS = [\n    ...\n    'oauth2_provider',     \u2776\n]\n```", "```py\n$ python manage.py migrate oauth2_provider\n```", "```py\nurlpatterns = [\n    ...\n    path('o/', include(\n     'oauth2_provider.urls', namespace='oauth2_provider')),\n]\n```", "```py\nOAUTH2_PROVIDER = {     \u2776\n    ...\n 'SCOPES': {\n 'email': 'Your email',\n 'name': 'Your name',\n ...\n },\n    ...\n}\n```", "```py\nOAUTH2_PROVIDER = {\n    ...\n 'DEFAULT_SCOPES': ['email', ],\n    ...\n}\n```", "```py\n<html>\n    <body>\n\n       <form method='POST'>\n         {% csrf_token %}                                          \u2776\n         {{ form.as_p }}                                           \u2777\n <input type=\"hidden\" name=\"next\" value=\"{{ next }}\" />    \u2778\n         <button type='submit'>Login</button>\n       </form>\n\n    </body>\n</html>\n```", "```py\nOAUTH2_PROVIDER = {\n    ...\n 'ALLOWED_REDIRECT_URI_SCHEMES': ['https'],\n    ...\n}\n```", "```py\nOAUTH2_PROVIDER = {\n    ...\n 'AUTHORIZATION_CODE_EXPIRE_SECONDS': 10,\n    ...\n}\n```", "```py\nOAUTH2_PROVIDER = {\n    ...\n 'ACCESS_TOKEN_EXPIRE_SECONDS': 36000,\n    ...\n}\n```", "```py\nfrom django.http import JsonResponse\nfrom oauth2_provider.views import ProtectedResourceView\n\nclass EmailView(ProtectedResourceView):     \u2776\n    def get(self, request):                 \u2777\n        return JsonResponse({               \u2778\n            'email': request.user.email,    \u2778\n        })                                  \u2778\n```", "```py\nMIDDLEWARE = [\n    ...\n 'oauth2_provider.middleware.OAuth2TokenMiddleware',\n]\n```", "```py\nAUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',    \u2776\n 'oauth2_provider.backends.OAuth2Backend',       \u2777\n]\n```", "```py\nfrom django.http import JsonResponse\nfrom oauth2_provider.views import ScopedProtectedResourceView\n\nclass ScopedEmailView(ScopedProtectedResourceView):    \u2776\n required_scopes = ['email', ]                      \u2777\n\n    def get(self, request):\n        return JsonResponse({\n            'email': request.user.email,\n        })\n```", "```py\nimport json\nfrom django.core.validators import validate_email\nfrom oauth2_provider.views import ReadWriteScopedResourceView\n\nclass ReadWriteEmailView(ReadWriteScopedResourceView):\n    required_scopes = ['email', ]\n\n    def get(self, request):                   \u2776\n        return JsonResponse({                 \u2776\n            'email': request.user.email,      \u2776\n        })                                    \u2776\n\n    def patch(self, request):                 \u2777\n        body = json.loads(request.body)       \u2777\n        email = body['email']                 \u2777\n        validate_email(email)                 \u2777\n        user = request.user                   \u2777\n        user.email = email                    \u2777\n        user.save(update_fields=['email'])    \u2777\n        return HttpResponse()                 \u2777\n```", "```py\nfrom oauth2_provider.decorators import protected_resource\n\n@protected_resource()                        \u2776\ndef protected_resource_view_function(request):\n    ...\n    return HttpResponse()\n\n@protected_resource(scopes=['email'])        \u2777\ndef scoped_protected_resource_view_function(request):\n    ...\n    return HttpResponse()\n```", "```py\nfrom oauth2_provider.decorators import rw_protected_resource\n\n@rw_protected_resource()                     \u2776\ndef read_write_view_function(request):\n    ...\n    return HttpResponse()\n\n@rw_protected_resource(scopes=['email'])     \u2777\ndef scoped_read_write_view_function(request):\n    ...\n    return HttpResponse()\n```", "```py\n$ pipenv install requests_oauthlib\n```", "```py\nCLIENT_ID = 'Q7kuJVjbGbZ6dGlwY49eFP7fNFEUFrhHGGG84aI3'\nCLIENT_SECRET = 'YyP1y8BCCqfsafJr0Lv9RcOVeMjdw3HqpvIPJeRjXB...'\n```", "```py\nAUTH_SERVER = 'https:/./authorize.alice.com'\nAUTH_FORM_URL = '%s/o/authorize/' % AUTH_SERVER\nTOKEN_EXCHANGE_URL = '%s/o/token/' % AUTH_SERVER\nRESOURCE_URL = 'https:/./resource.alice.com/protected/email/'\n```", "```py\n$ gunicorn third.wsgi --bind localhost:8001 \\              \u2776\n                      --keyfile path/to/private_key.pem \\\n                      --certfile path/to/certificate.pem\n```", "```py\nfrom django.views import View\nfrom django.shortcuts import render\nfrom requests_oauthlib import OAuth2Session\n\nclass WelcomeView(View):\n    def get(self, request):\n        access_token = request.session.get('access_token')\n        client = OAuth2Session(CLIENT_ID, token=access_token)\n        ctx = {}\n\n        if not access_token:\n            url, state = client.authorization_url(AUTH_FORM_URL)    \u2776\n            ctx['authorization_url'] = url                          \u2776\n            request.session['state'] = state                        \u2776\n        else:\n            response = client.get(RESOURCE_URL)                     \u2777\n            ctx['email'] = response.json()['email']                 \u2777\n\n        return render(request, 'welcome.html', context=ctx)\n```", "```py\n<html>\n    <body>\n        {% if email %}\n            Email: {{ email }}\n        {% else %}\n            <a href='{{ authorization_url }}'>    \u2776\n                What is your email?               \u2776\n            </a>                                  \u2776\n        {% endif %}\n    </body>\n</html>\n```", "```py\nfrom django.shortcuts import redirect\nfrom django.urls import reverse\nfrom django.views import View\n\nclass OAuthCallbackView(View):\n    def get(self, request):\n        state = request.session.pop('state')\n        client = OAuth2Session(CLIENT_ID, state=state)\n\n        redirect_URI = request.build_absolute_uri()\n        access_token = client.fetch_token(          \u2776\n            TOKEN_EXCHANGE_URL,                     \u2776\n            client_secret=CLIENT_SECRET,            \u2776\n            authorization_response=redirect_URI)    \u2776\n        request.session['access_token'] = access_token\n\n        return redirect(reverse('welcome'))         \u2777\n```", "```py\n>>> data = {\n...     'client_id': CLIENT_ID,\n...     'client_secret': CLIENT_SECRET,\n...     'token': client.token['access_token']\n... }\n>>> client.post('%s/o/revoke_token/' % AUTH_SERVER, data=data)    \u2776\n<Response [200]>                                                  \u2776\n>>> client.get(RESOURCE_URL)                                      \u2777\n<Response [403]>                                                  \u2777\n```"]