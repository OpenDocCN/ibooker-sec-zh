["```py\n<html>\n  <body onload=\"document.forms[0].submit()\">                      \u2776\n    <form method=\"POST\"\n          action=\"https:/./admin.alice.com/group-membership/\">     \u2777\n      <input type=\"hidden\" name=\"username\" value=\"mallory\"/>      \u2778\n      <input type=\"hidden\" name=\"group\" value=\"administrator\"/>   \u2778\n    </form>\n  </body>\n</html>\n```", "```py\nSet-Cookie: sessionid=<session-id-value>; SameSite=None; ...\nSet-Cookie: sessionid=<session-id-value>; SameSite=Strict; ...\nSet-Cookie: sessionid=<session-id-value>; SameSite=Lax; ...\n```", "```py\n<a href=\"https://admin.alice.com/group-membership/?   \u2776\n\u27a5 username=mallory&                                  \u2777\n\u27a5 group=administrator\">                              \u2777\n  Win an iPhone!\n</a>\n```", "```py\nfrom django.http import HttpResponse, HttpResponseNotAllowed\n\ndef group_membership_function(request):\n\n    allowed_methods = {'POST'}                           \u2776\n    if request.method not in allowed_methods:            \u2776\n        return HttpResponseNotAllowed(allowed_methods)   \u2776\n\n    ...\n    return HttpResponse('state change successful')\n```", "```py\nfrom django.http import HttpResponse\nfrom django.views import View\n\nclass GroupMembershipView(View):\n\n    def post(self, request, *args, **kwargs):    \u2776\n\n        ...\n        return HttpResponse('state change successful')\n```", "```py\n@require_http_methods(['POST'])\ndef group_membership_function(request):\n    ...\n    return HttpResponse('state change successful')\n```", "```py\nCSRF_TRUSTED_ORIGINS = [\n    'bank.alice.com'\n]\n```", "```py\nSet-Cookie: csrftoken=<token-value>; <directive>; <directive>;\n```", "```py\nSet-Cookie: csrftoken=<token-value>; Secure\n```", "```py\n<html>\n\n    <form method='POST'>\n {% csrf_token %}      \u2776\n        <table>\n            {{ form.as_table }}\n        </table>\n        <input type='submit' value='Submit'>\n    </form>\n\n</html>\n```", "```py\n<input type=\"hidden\" name=\"csrfmiddlewaretoken\"\n\u27a5     value=\"elgWiCFtsoKkJ8PLEyoOBb6GlUViJFagdsv7UBgSP5gvb95p2a...\">\n```", "```py\nfunction extractToken(){\n    const split = document.cookie.split('; ');\n    const cookies = new Map(split.map(v => v.split('=')));\n    return cookies.get('csrftoken');\n}\n```", "```py\nconst headers = {\n   'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n};\nfetch('/resource/', {                                    \u2776\n        method: 'POST',                                  \u2776\n        headers: headers,                                \u2776\n body: 'csrfmiddlewaretoken=' + extractToken()    \u2776\n    })\n    .then(response => response.json())                   \u2777\n    .then(data => console.log(data))                     \u2777\n    .catch(error => console.error('error', error));      \u2777\n```", "```py\nfetch('/resource/', {\n        method: 'DELETE',                    \u2776\n headers: {                           \u2777\n 'X-CSRFToken': extractToken()    \u2777\n }                                    \u2777\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(error => console.error('error', error));\n```"]